{"version":3,"sources":["../../../../routes/client/auth/index.js"],"names":["_","require","express","router","Router","db","employee_routes","employer_routes","user","exports","use","require_session_key","RegExp","require_employee_id","require_employer_id","USER_FIELDS","req","res","next","originalUrl","originalMethod","employer_id","status","send","employee_id","header_api_key","get","session_key","cookies","user_session_key","sql","values","connectAndQuery","err","results","console","error","sendStatus","length","pick"],"mappings":"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","file":"index.js","sourcesContent":["const _ = require('lodash');\nconst express = require('express');\nconst router = new express.Router();\nconst db = require('../../../mysql_db_prod.js');\nconst employee_routes = require('./employee');\nconst employer_routes = require('./employer');\nconst user = require('./user.js');\n\nexports.router = router;\n\nrouter.use(require_session_key);\nrouter.use(new RegExp(/\\/1\\/employee/), require_employee_id);\nrouter.use(new RegExp(/\\/1\\/employer/), require_employer_id);\n\nrouter.use(employee_routes.router);\nrouter.use(employer_routes.router);\nrouter.use(user.router);\n\nconst USER_FIELDS = [\n  \"user_id\",\n  \"alias\",\n  \"user_type\",\n  \"email\",\n  \"verified\",\n  \"user_role_id\",\n  \"facebook_id\",\n  \"linkedin_id\",\n  \"is_deleted\",\n  \"employer_id\",\n  \"employee_id\"\n];\n\nfunction require_employer_id(req, res, next) {\n  if(req.originalUrl === '/client/1/employer' && req.originalMethod === 'POST') {\n    next();\n  } else if(!req.user.employer_id || req.user.employer_id < 1) {\n    res.status(403).send(\"Unknown employer.\");\n  } else {\n  }\n}\nfunction require_employee_id(req, res, next) {\n  if(req.originalUrl === '/client/1/employee' && req.originalMethod === 'POST') {\n    next();\n  } else if(!req.user.employee_id || req.user.employee_id < 1) {\n    res.status(403).send(\"Unknown employee.\");\n  } else {\n    next();\n  }\n}\nfunction require_session_key(req, res, next) {\n  var header_api_key = req.get('X-Yobs-User-Session-Key');\n  var session_key = header_api_key || req.cookies.user_session_key;\n\n  if (!session_key) {\n    res.status(403).send(\"X-Yobs-User-Session-Key header or user_session_key cookie is required\");\n  } else {\n    const sql = \"SELECT user.*, employer.employer_id, employee.employee_id \" +\n                \"FROM user \" +\n                \"JOIN user_session USING(user_id) \" +\n                \"LEFT JOIN employee USING(user_id) \" +\n                \"LEFT JOIN employer USING(user_id) \" +\n                \"WHERE user_session_key = ?\";\n\n    const values = [session_key];\n    db.connectAndQuery({sql, values}, (err, results) => {\n      if(err) {\n        console.error(\"require_session_key: sql err\", err);\n        res.sendStatus(500);\n      } else if(results.length < 1) {\n        res.status(403).send(\"Unknown user session key.\");\n      } else {\n        req.user = _.pick(results[0], USER_FIELDS);\n        next();\n      }\n    });\n  }\n}\n"]}