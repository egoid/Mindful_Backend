{"version":3,"sources":["../../../../../routes/client/auth/employer/job_schedule.js"],"names":["_","require","express","db","router","Router","exports","post","create_job_sched","update_job_sched","delete","delete_job_sched","req","res","body","schedule","length","status","send","job_id","connection","schedule_id","async","series","done","getConnection","err","conn","console","error","sql","values","each","schedule_day","SCHEDULE_VALUES","indexOf","push","queryWithConnection","results","consle","insertId","affectedRows","commit","rollback","sendStatus","job_schedule_id","params","arg_map","day_list","day_column_name","i","connectAndQuery"],"mappings":"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","file":"job_schedule.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst db = require('../../../../mysql_db_prod.js');\n\nconst router = new express.Router();\nexports.router = router;\n\nrouter.post('/1/job_schedule', create_job_sched);\nrouter.post('/1/job_schedule/:job_sched_id', update_job_sched);\nrouter.delete('/1/job_schedule/:job_sched_id', delete_job_sched);\n\nfunction create_job_sched(req, res) {\n    if (!req.body.schedule || req.body.schedule.length < 7) {\n\tres.status(400).send('Seven day schedule required.');\n    } else if (!req.body.job_id) {\n\tres.status(400).send('Job ID required.');\n    } else {\n\tlet connection;\n\tlet schedule_id;\n\t\n\tconst schedule = req.body.schedule;\n\tconst job_id = req.body.job_id;\n\t\n\tasync.series([\n\t\t(done) => {\n\t\t    db.getConnection((err, conn) => {\n\t\t\tif (err) {\n\t\t\t    console.error(\"create_job: sql err:\", err);\n\t\t\t}\n\t\t\tconnection = conn;\n\t\t\tdone(err);\n\t\t    });\n\t\t},\n\t\t(done) => {\n\t\t    const sql = \"INSERT INTO job_schedule \" +\n\t\t\t\"(sunday_schedule, monday_schedule, \" +\n\t\t\t\" tuesday_schedule, wednesday_schedule, thursday_schedule, \" +\n\t\t\t\" friday_schedule, saturday_schedule) VALUES \"\n\t\t    \"(?,?,?,?,?,?,?,?)\";\n\t\t    \n\t\t    const values = [];\n\t\t    _.each(schedule, (schedule_day) => {\n\t\t\tif (SCHEDULE_VALUES.indexOf(schedule_day) < 0) {\n\t\t\t    values.push(\"none\");\n\t\t\t} else {\n\t\t\t    values.push(schedule_day);\n\t\t\t}\n\t\t    });\n\t\t    \n\t\t    db.queryWithConnection(connection, sql, values, (err, results) => {\n\t\t\tif (err) {\n\t\t\t    consle.error(\"create_job: sql err:\", err);\n\t\t\t} else {\n\t\t\t    schedule_id = results.insertId;\n\t\t\t}\n\t\t\tdone(error);\n\t\t    });\n\t\t},\n\t\t(done) => {\n\t\t    const sql = \"UPDATE job SET job_schedule_id = ? WHERE job_id = ?\";\n\t\t    const values = [schedule_id, job_id];\n\t\t    db.queryWithConnection(connection, sql, values, (err, results) => {\n\t\t\tif (err) {\n\t\t\t    consle.error(err);\n\t\t\t} else if (results.affectedRows < 1) {\n\t\t\t    err = '404';\n\t\t\t}\n\t\t\tdone(err);\n\t\t    });\n\t\t},\n\t\t(done) => {\n\t\t    db.commit(connection, done);\n\t\t},\n\t    ],\n\t    (err) => {\n\t\tif (err) {\n\t\t    db.rollback(connection, () => {});\n\t\t    \n\t\t    if (err == '404') {\n\t\t\tres.sendStatus(404);\n\t\t    } else {\n\t\t\tres.sendStatus(500);\n\t\t    }\n\t\t} else {\n\t\t    res.sendStatus(200);\n\t\t}\n\t    });\n    }\n}\nfunction update_job_sched(req, res) {\n    const job_schedule_id = req.params.job_schedule_id;\n    if (!req.body.schedule || req.body.schedule.length < 7) {\n\tres.status(400).send('Seven day schedule required.');\n    } else {\n\tconst arg_map = {};\n\tconst schedule = req.body.schedule;\n\tconst day_list = ['sunday_schedule', 'monday_schedule', 'tuesday_schedule',\n\t    'wednesday_schedule', 'thursday_schedule', 'friday_schedule',\n\t    'saturday_schedule'];\n\t_.each(day_list, (day_column_name, i) => {\n\t    let schedule_day = schedule[i];\n\t    if (SCHEDULE_VALUES.indexOf(schedule_day) < 0) {\n\t\targ_map[day_column_name] = 'none';\n\t    } else {\n\t\targ_map[day_column_name] = schedule[i];\n\t    }\n\t});\n\t\n\tconst sql = \"UPDATE job_schedule SET ? WHERE job_schedule_id = ?\";\n\tconst values = [arg_map, job_schedule_id];\n\tdb.connectAndQuery({sql, values}, (error, results) => {\n\t    if (error) {\n\t\tconsole.error(\"update_job_sched: sql err:\", error);\n\t\tres.sendStatus(500);\n\t    } else if (results.affectedRows < 1) {\n\t\tres.sendStatus(404);\n\t    } else {\n\t\tres.sendStatus(200);\n\t    }\n\t});\n    }\n}\nfunction delete_job_sched(req, res) {\n    const sql = \"DELETE FROM job_schedule WHERE job_schedule_id = ?\";\n    const values = [req.params.job_schedule_id];\n    db.connectAndQuery({sql, values}, (error, results) => {\n\tif (error) {\n\t    console.error(\"delete_job_sched: sql err:\", error);\n\t    res.sendStatus(500);\n\t} else if (results.affectedRows < 1) {\n\t    res.sendStatus(404);\n\t} else {\n\t    res.sendStatus(200);\n\t}\n    });\n}\n"]}