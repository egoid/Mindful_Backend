{"version":3,"sources":["../../../../routes/client/auth/employer_favorites.js"],"names":["_","require","async","express","db","router","Router","exports","get","get_applied_jobs","post","create_applied_jobs","update_applied_jobs","delete","delete_applied_jobs","console","log","_extract_applied_job_def","req","company_id","body","applied_job_id","applied_job_type_id","employer_id","employee_id","status","reviewed_by_id","_extract_update_applied_job_def","res","query","sql","values","connectAndQuery","err","results","error","sendStatus","length","send","job_values","connection","series","done","getConnection","conn","queryWithConnection","columns","each","Object","keys","column_name","count","push","join","repeat","slice","insertId","commit","result","rollback","applied_job_values","params","affectedRows","id"],"mappings":"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","file":"employer_favorites.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst async = require('async');\nconst express = require('express');\nconst db = require('../../../../mysql_db_prod.js');\n\nconst router = new express.Router();\nexports.router = router;\n\n/**\n *  ROUTES\n */\nrouter.get('/1/applied_jobs', get_applied_jobs);\nrouter.post('/1/applied_jobs', create_applied_jobs);\nrouter.post('/1/applied_jobs/:applied_job_id', update_applied_jobs);\nrouter.delete('/1/applied_jobs/:applied_job_id', delete_applied_jobs);\n\nconsole.log('fired2')\n\n/**\n * Description:  Applied jobs parameters from the request\n * @param req\n * @returns {{company_id: *, applied_job_id: *, applied_job_type_id: *, employer_id: *, employee_id: *, status, reviewed_by_id: *}}\n * @private\n */\nfunction _extract_applied_job_def(req) {\n    \n    return {\n\tcompany_id: req.body.company_id,\n\tapplied_job_id: req.body.applied_job_id,\n\tapplied_job_type_id: req.body.applied_job_type_id,\n\temployer_id: req.body.employer_id,\n\temployee_id: req.body.employee_id,\n\tstatus: req.body.status,\n\treviewed_by_id: req.body.reviewed_by_id\n\t\n    };\n}\n\nfunction _extract_update_applied_job_def(req) {\n    return {\n\temployer_id: req.body.employer_id,\n\tstatus: req.body.status,\n\treviewed_by_id: req.body.reviewed_by_id\n    };\n}\n\n\nfunction get_applied_jobs(req, res) {\n    \n    const employer_id = req.query.employer_id;\n    const sql = \"SELECT company_id, applied_job_id, applied_job_type_id, employer_id, employee_id,status, reviewed_by_id, added_date \" +\n\t\"FROM applied_jobs \" +\n\t\"WHERE employer_id  = ?\";\n    const values = [employer_id];\n    \n    db.connectAndQuery({sql, values}, (err, results) => {\n\tif(err) {\n\t    console.error(\"get_applied_jobs: sql err:\", err);\n\t    res.sendStatus(500);\n\t} else if(results.length < 1) {\n\t    res.sendStatus(404);\n\t} else {\n\t    res.status(200).send(results);\n\t}\n    });\n    \n}\n\n\nfunction create_applied_jobs(req, res) {\n\n    if (!req.body.applied_job_id && !req.body.employer_id) {\n\tres.sendStatus(400);\n\treturn;\n    }\n    \n    const job_values = _extract_applied_job_def(req);\n    let connection;\n    \n    async.series([\n\t    (done) => {\n\t\tdb.getConnection((error, conn) => {\n\t\t    if (error) {\n\t\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\t    }\n\t\t    connection = conn;\n\t\t    done(error);\n\t\t});\n\t    },\n\t    (done) => {\n\t\t\n\t\tdb.queryWithConnection(connection, \"START TRANSACTION\", [], (error) => {\n\t\t    if (error) {\n\t\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\t    }\n\t\t    done(error);\n\t\t});\n\t    },\n\t    (done) => {\n\t\t\n\t\tconst columns = [];\n\t\tconst values = [];\n\t\t\n\t\t_.each(Object.keys(job_values), (column_name, count) => {\n\t\t    columns.push(column_name);\n\t\t    values.push(job_values[column_name]);\n\t\t});\n\t\t\n\t\tconst sql = \"INSERT INTO applied_jobs (\" + columns.join(',') + \")\" + \" VALUES (\" + \"?,\".repeat(values.length).slice(0, -1) + \")\";\n\t\tdb.queryWithConnection(connection, sql, values, (error, results) => {\n\t\t    \n\t\t    if (error) {\n\t\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\t\tres.sendStatus(500);\n\t\t    } else {\n\t\t\tdone(error, results.insertId);\n\t\t    }\n\t\t});\n\t\t\n\t    },\n\t    (done) => {\n\t\tdb.commit(connection, done);\n\t    },\n\t],\n\t(error, result) => {\n\t    if (error) {\n\t\tdb.rollback(connection, () => {});\n\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\tres.sendStatus(500);\n\t    } else {\n\t\tres.status(200).send(result);\n\t    }\n\t});\n}\nfunction update_applied_jobs(req, res) {\n    const applied_job_values = _extract_update_applied_job_def(req);\n    const applied_job_id = req.params.applied_job_id;\n    \n    if (!applied_job_values.employer_id || !applied_job_id) {\n\tres.status(400).send(\"When updating a job, company, job roles, and job types cannot be created.\");\n    } else {\n\tconst sql = \"UPDATE applied_jobs SET ? WHERE applied_job_id = ? AND employer_id = ?\";\n\tdb.connectAndQuery({sql, values: [applied_job_values, applied_job_id, req.body.employer_id]}, (error, results) => {\n\t    if (error) {\n\t\tconsole.error(\"update_applied_jobs: sql err:\", error);\n\t\tres.sendStatus(500);\n\t    } else {\n\t\tif (results.affectedRows < 1) {\n\t\t    res.sendStatus(404);\n\t\t} else {\n\t\t    res.status(200).send({id: applied_job_id});\n\t\t}\n\t    }\n\t});\n    }\n}\nfunction delete_applied_jobs(req, res) {\n    const values = [req.params.applied_job_id, req.body.employer_id];\n    const sql = \"DELETE FROM applied_jobs WHERE applied_job_id = ? AND employer_id = ?\";\n    db.connectAndQuery({sql, values}, (error, results) => {\n\tif (error) {\n\t    console.error(\"delete_applied_jobs: sql err:\", error);\n\t    res.sendStatus(500);\n\t} else if (results.affectedRows < 1) {\n\t    res.sendStatus(404);\n\t} else {\n\t    res.sendStatus(200);\n\t}\n    });\n}\n"]}