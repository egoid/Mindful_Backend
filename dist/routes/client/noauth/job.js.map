  {"version":3,"sources":["../../../../routes/client/noauth/job.js"],"names":["_","require","async","express","NodeGeocoder","db","router","Router","exports","GOOGLE_GEO_CONFIG","apiKey","formatter","httpAdapter","provider","geocoder","get","search_job","get_job","get_job_roles","post","JOB_KEYS","COMPANY_KEYS","JOB_ROLE_KEYS","JOB_TYPE_KEYS","SKILL_KEYS","LABEL_TO_RADIUS","walk","bike","metro","car","_make_job_from_results","results","console","log","result","job_ids","length","each","a_result","job","job_id","pick","job_role","job_type","company","skills","property_bag","JSON","parse","r","job_skill","skill_def","skill_type","push","job_skill_id","Object","assign","industry","job_schedule","req","res","sql","connectAndQuery","values","params","nestTables","error","sendStatus","status","send","search_location","body","location","query","search_string","search","search_industry","industry_id","search_job_type","job_type_id","search_radius_label","radius","search_lat","search_long","search_formatted","keys","indexOf","series","done","geocode","then","formattedAddress","latitude","longitude","catch","err","job_roles"],"mappings":"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","file":"job.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst async = require('async');\nconst express = require('express');\nconst NodeGeocoder = require('node-geocoder');\nconst db = require('../../../mysql_db_prod.js');\n\nconst router = new express.Router();\nexports.router = router;\n\nconst GOOGLE_GEO_CONFIG = {\n    apiKey: 'AIzaSyAJwf4JXpI9MRGuZdYcOFT9-nq5lzbuPKI',\n    formatter: null,\n    httpAdapter: 'https',\n    provider: 'google',\n};\nconst geocoder = NodeGeocoder(GOOGLE_GEO_CONFIG);\n\n\nrouter.get('/1/jobs', search_job);\nrouter.get('/1/job/:job_id', get_job);\nrouter.get('/1/job_roles', get_job_roles);\n\nrouter.post('/1/jobs', search_job);\n\nconst JOB_KEYS = [\n    'job_id',\n    'company_id',\n    'employer_id',\n    'title',\n    'pay_rate_min',\n    'pay_rate_max',\n    'job_schedule_id',\n    'min_gpa',\n    'school_level_id',\n    'description',\n    'responsibilities',\n    'activities',\n    'is_yobs_client',\n    'external_url',\n    'posted_at',\n    'takedown_at',\n    'is_deleted',\n    'location',\n    'latitude',\n    'longitude'\n];\nconst COMPANY_KEYS = [\n    'company_id',\n    'name',\n    'industry_id',\n    'email_domain',\n    'property_bag',\n    'is_deleted',\n];\nconst JOB_ROLE_KEYS = [\n    'job_role_id',\n    'job_role_name',\n    'job_role_descr'\n];\nconst JOB_TYPE_KEYS = [\n    'job_type_id',\n    'job_type_name',\n    'job_type_descr'\n];\nconst SKILL_KEYS = [\n    'skill_type_id',\n    'skill_type_name',\n    'skill_type_desc'\n];\nconst LABEL_TO_RADIUS = {\n    walk: 1.25,\n    bike: 4,\n    metro: 8,\n    car: 8\n};\n\nfunction _make_job_from_results(results) {\n    \n    console.log('nothing');\n    console.log(results);\n    \n    let result = [];\n    let job_ids = {}\n    \n    if (results.length) {\n\t_.each(results, (a_result) => {\n\t    if (!job_ids[a_result.job.job_id]) {\n\t\tjob_ids[a_result.job.job_id] = true;\n\t\t\n\t\tlet job = _.pick(a_result.job, JOB_KEYS);\n\t\tlet job_role = _.pick(a_result.job_role, JOB_ROLE_KEYS);\n\t\tlet job_type = _.pick(a_result.job_type, JOB_TYPE_KEYS);\n\t\tlet company = _.pick(a_result.company, COMPANY_KEYS);\n\t\tlet skills = [];\n\t\t\n\t\tcompany.property_bag = JSON.parse(company.property_bag);\n\t\t\n\t\t_.each(results, (r) => {\n\t\t    if (r.job.job_id == r.job_skill.job_id) {\n\t\t\tconst skill_def = _.pick(r.skill_type, SKILL_KEYS);\n\t\t\tskill_def.push(r.job_skill.job_skill_id)\n\t\t\tskills.push(skill_def);\n\t\t    }\n\t\t});\n\t\t\n\t\tresult.push({\n\t\t    job: Object.assign({}, job, job_role, job_type),\n\t\t    industry: a_result.industry,\n\t\t    job_schedule: a_result.job_schedule,\n\t\t    company,\n\t\t    skills,\n\t\t});\n\t    }\n\t});\n    }\n    \n    return result;\n}\n\nfunction get_job(req, res) {\n    const sql = \"SELECT job.*, company.* , industry.*, job_role.*, job_type.*, job_skill.*, job_schedule.*, skill_type.* \" +\n\t\"FROM job \" +\n\t\"JOIN company USING(company_id) \" +\n\t\"JOIN industry USING(industry_id) \" +\n\t\"JOIN job_role USING(job_role_id) \" +\n\t\"JOIN job_type USING(job_type_id) \" +\n\t\"LEFT JOIN job_schedule USING(job_schedule_id) \" +\n\t\"LEFT JOIN job_skill ON job_skill.job_id = job.job_id \" +\n\t\"LEFT JOIN skill_type ON job_skill.skill_type_id = skill_type.skill_type_id \" +\n\t\"WHERE job.job_id = ?\";\n    db.connectAndQuery({sql, values: [req.params.job_id], nestTables: true}, (error, results) => {\n\tif (error) {\n\t    console.error(\"get_job: sql err:\", error);\n\t    res.sendStatus(500);\n\t} else if (results.length < 1) {\n\t    res.sendStatus(404);\n\t} else {\n\t    let result = _make_job_from_results(results);\n\t    res.status(200).send(result[0]);\n\t}\n    });\n}\nfunction search_job(req, res) {\n    \n    \n    const search_location = req.body.location || req.query.location;\n    const search_string = req.body.search || req.query.search;\n    const search_industry = req.body.industry_id || req.query.industry_id;\n    const search_job_type = req.body.job_type_id || req.query.job_type_id;\n    \n    let search_radius_label = req.body.radius || req.query.radius;\n    let search_lat;\n    let search_long;\n    let search_formatted;\n    let result;\n    \n    if (Object.keys(LABEL_TO_RADIUS).indexOf(search_radius_label) < 0) {\n\tsearch_radius_label = 'bike';\n    }\n    \n    async.series([\n\t    (done) => {\n\t\tgeocoder.geocode(search_location)\n\t\t    .then((res) => {\n\t\t\tsearch_formatted = res[0].formattedAddress;\n\t\t\tsearch_lat = res[0].latitude;\n\t\t\tsearch_long = res[0].longitude;\n\t\t\tdone();\n\t\t    })\n\t\t    .catch((err) => {\n\t\t\tconsole.error(\"search_job: geocoding err:\", err);\n\t\t\tdone(err);\n\t\t    });\n\t    },\n\t    (done) => {\n\t\tlet values = [search_lat, search_lat, search_long, search_long];\n\t\tlet sql = \"SELECT job.*, company.* , industry.*, job_role.*, job_type.*, job_skill.*, job_schedule.*, skill_type.* \" +\n\t\t    \"FROM job \" +\n\t\t    \"JOIN company USING(company_id) \" +\n\t\t    \"JOIN industry USING(industry_id) \" +\n\t\t    \"JOIN job_role USING(job_role_id) \" +\n\t\t    \"JOIN job_type USING(job_type_id) \" +\n\t\t    \"LEFT JOIN job_schedule USING(job_schedule_id) \" +\n\t\t    \"LEFT JOIN job_skill ON job_skill.job_id = job.job_id \" +\n\t\t    \"LEFT JOIN skill_type ON job_skill.skill_type_id = skill_type.skill_type_id \" +\n\t\t    \"WHERE \" +\n\t\t    \"(job.is_deleted = 0 OR job.is_deleted IS NULL) AND \" +\n\t\t    \"job.latitude_lower_\" + search_radius_label + \" <= ? AND \" +\n\t\t    \"job.latitude_upper_\" + search_radius_label + \" >= ? AND \" +\n\t\t    \"job.longitude_lower_\" + search_radius_label + \" >= ? AND \" +\n\t\t    \"job.longitude_upper_\" + search_radius_label + \" <= ?\";\n\t\t\n\t\tif (search_industry && (search_industry.length || search_industry >= 1)) {\n\t\t    sql += \" AND company.industry_id IN (?)\";\n\t\t    values.push(search_industry);\n\t\t}\n\t\tif (search_string) {\n\t\t    sql += \" AND job.title LIKE ?\";\n\t\t    values.push('%' + search_string + '%');\n\t\t}\n\t\tif (search_job_type && (search_job_type.length || search_job_type >= 1)) {\n\t\t    sql += \" AND job.job_type_id IN (?)\";\n\t\t    values.push(search_job_type);\n\t\t}\n\t\t\n\t\tdb.connectAndQuery({sql, values, nestTables: true}, (error, results) => {\n\t\t    if (error) {\n\t\t\tconsole.error(\"search_job: sql err:\", error);\n\t\t    } else {\n\t\t\tresult = _make_job_from_results(results);\n\t\t    }\n\t\t    done(error);\n\t\t});\n\t    },\n\t],\n\t(error) => {\n\t    if (error) {\n\t\tres.sendStatus(500);\n\t    } else {\n\t\tres.status(200).send(result);\n\t    }\n\t});\n}\nfunction get_job_roles(req, res) {\n    const sql = \"SELECT * FROM job_role\";\n    const values = [];\n    db.connectAndQuery({sql, values}, (error, results) => {\n\tif (error) {\n\t    console.error(\"get_job_roles: sql err:\", error);\n\t    res.sendStatus(500);\n\t} else {\n\t    const job_roles = [];\n\t    _.each(results, (result) => {\n\t\tjob_roles.push(_.pick(result, JOB_ROLE_KEYS));\n\t    });\n\t    res.status(200).send(job_roles);\n\t}\n    });\n}\n"]}