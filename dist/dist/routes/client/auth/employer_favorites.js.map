{"version":3,"sources":["../../../../routes/client/auth/employer_favorites.js"],"names":["_","require","async","express","db","router","Router","exports","get","get_applied_jobs","post","create_applied_jobs","update_applied_jobs","delete","delete_applied_jobs","console","log","_extract_applied_job_def","req","company_id","body","applied_job_id","applied_job_type_id","employer_id","employee_id","status","reviewed_by_id","_extract_update_applied_job_def","res","query","sql","values","connectAndQuery","err","results","error","sendStatus","length","send","job_values","connection","series","done","getConnection","conn","queryWithConnection","columns","each","Object","keys","column_name","count","push","join","repeat","slice","insertId","commit","result","rollback","applied_job_values","params","affectedRows","id"],"mappings":"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","file":"employer_favorites.js","sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar async = require('async');\nvar express = require('express');\nvar db = require('../../../../mysql_db_prod.js');\n\nvar router = new express.Router();\nexports.router = router;\n\n/**\n *  ROUTES\n */\nrouter.get('/1/applied_jobs', get_applied_jobs);\nrouter.post('/1/applied_jobs', create_applied_jobs);\nrouter.post('/1/applied_jobs/:applied_job_id', update_applied_jobs);\nrouter.delete('/1/applied_jobs/:applied_job_id', delete_applied_jobs);\n\nconsole.log('fired2');\n\n/**\n * Description:  Applied jobs parameters from the request\n * @param req\n * @returns {{company_id: *, applied_job_id: *, applied_job_type_id: *, employer_id: *, employee_id: *, status, reviewed_by_id: *}}\n * @private\n */\nfunction _extract_applied_job_def(req) {\n\n\treturn {\n\t\tcompany_id: req.body.company_id,\n\t\tapplied_job_id: req.body.applied_job_id,\n\t\tapplied_job_type_id: req.body.applied_job_type_id,\n\t\temployer_id: req.body.employer_id,\n\t\temployee_id: req.body.employee_id,\n\t\tstatus: req.body.status,\n\t\treviewed_by_id: req.body.reviewed_by_id\n\n\t};\n}\n\nfunction _extract_update_applied_job_def(req) {\n\treturn {\n\t\temployer_id: req.body.employer_id,\n\t\tstatus: req.body.status,\n\t\treviewed_by_id: req.body.reviewed_by_id\n\t};\n}\n\nfunction get_applied_jobs(req, res) {\n\n\tvar employer_id = req.query.employer_id;\n\tvar sql = \"SELECT company_id, applied_job_id, applied_job_type_id, employer_id, employee_id,status, reviewed_by_id, added_date \" + \"FROM applied_jobs \" + \"WHERE employer_id  = ?\";\n\tvar values = [employer_id];\n\n\tdb.connectAndQuery({ sql: sql, values: values }, function (err, results) {\n\t\tif (err) {\n\t\t\tconsole.error(\"get_applied_jobs: sql err:\", err);\n\t\t\tres.sendStatus(500);\n\t\t} else if (results.length < 1) {\n\t\t\tres.sendStatus(404);\n\t\t} else {\n\t\t\tres.status(200).send(results);\n\t\t}\n\t});\n}\n\nfunction create_applied_jobs(req, res) {\n\n\tif (!req.body.applied_job_id && !req.body.employer_id) {\n\t\tres.sendStatus(400);\n\t\treturn;\n\t}\n\n\tvar job_values = _extract_applied_job_def(req);\n\tvar connection = void 0;\n\n\tasync.series([function (done) {\n\t\tdb.getConnection(function (error, conn) {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\t\t}\n\t\t\tconnection = conn;\n\t\t\tdone(error);\n\t\t});\n\t}, function (done) {\n\n\t\tdb.queryWithConnection(connection, \"START TRANSACTION\", [], function (error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\t\t}\n\t\t\tdone(error);\n\t\t});\n\t}, function (done) {\n\n\t\tvar columns = [];\n\t\tvar values = [];\n\n\t\t_.each(Object.keys(job_values), function (column_name, count) {\n\t\t\tcolumns.push(column_name);\n\t\t\tvalues.push(job_values[column_name]);\n\t\t});\n\n\t\tvar sql = \"INSERT INTO applied_jobs (\" + columns.join(',') + \")\" + \" VALUES (\" + \"?,\".repeat(values.length).slice(0, -1) + \")\";\n\t\tdb.queryWithConnection(connection, sql, values, function (error, results) {\n\n\t\t\tif (error) {\n\t\t\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\t\t\tres.sendStatus(500);\n\t\t\t} else {\n\t\t\t\tdone(error, results.insertId);\n\t\t\t}\n\t\t});\n\t}, function (done) {\n\t\tdb.commit(connection, done);\n\t}], function (error, result) {\n\t\tif (error) {\n\t\t\tdb.rollback(connection, function () {});\n\t\t\tconsole.error(\"create_applied_jobs: sql err:\", error);\n\t\t\tres.sendStatus(500);\n\t\t} else {\n\t\t\tres.status(200).send(result);\n\t\t}\n\t});\n}\nfunction update_applied_jobs(req, res) {\n\tvar applied_job_values = _extract_update_applied_job_def(req);\n\tvar applied_job_id = req.params.applied_job_id;\n\n\tif (!applied_job_values.employer_id || !applied_job_id) {\n\t\tres.status(400).send(\"When updating a job, company, job roles, and job types cannot be created.\");\n\t} else {\n\t\tvar sql = \"UPDATE applied_jobs SET ? WHERE applied_job_id = ? AND employer_id = ?\";\n\t\tdb.connectAndQuery({ sql: sql, values: [applied_job_values, applied_job_id, req.body.employer_id] }, function (error, results) {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(\"update_applied_jobs: sql err:\", error);\n\t\t\t\tres.sendStatus(500);\n\t\t\t} else {\n\t\t\t\tif (results.affectedRows < 1) {\n\t\t\t\t\tres.sendStatus(404);\n\t\t\t\t} else {\n\t\t\t\t\tres.status(200).send({ id: applied_job_id });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\nfunction delete_applied_jobs(req, res) {\n\tvar values = [req.params.applied_job_id, req.body.employer_id];\n\tvar sql = \"DELETE FROM applied_jobs WHERE applied_job_id = ? AND employer_id = ?\";\n\tdb.connectAndQuery({ sql: sql, values: values }, function (error, results) {\n\t\tif (error) {\n\t\t\tconsole.error(\"delete_applied_jobs: sql err:\", error);\n\t\t\tres.sendStatus(500);\n\t\t} else if (results.affectedRows < 1) {\n\t\t\tres.sendStatus(404);\n\t\t} else {\n\t\t\tres.sendStatus(200);\n\t\t}\n\t});\n}\n//# sourceMappingURL=employer_favorites.js.map"]}