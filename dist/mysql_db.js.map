{"version":3,"sources":["../mysql_db.js"],"names":["_","require","async","mysql","config","TIMEOUT_MS","DEFAULT_DB_CONF","multipleStatements","timezone","debug","charset","process","env","environment","mysql_db_raw","host","RDS_hostname","password","RDS_password","port","RDS_port","db_config","Object","assign","db_pool","createPool","commit","connection","done","queryWithConnection","error","release","e","console","connectAndQuery","opts","callback","sql","values","queryAndGetConnection","results","exception","timeout","query","getConnection","rollback","exports"],"mappings":"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","file":"mysql_db.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst async = require('async');\nconst mysql = require('mysql');\nconst config = require('./config.json');\n\nconst TIMEOUT_MS = 30*1000;\nconst DEFAULT_DB_CONF = {\n  multipleStatements: true,\n  timezone: 'UTC',\n  debug: false,\n  charset: 'utf8mb4'\n};\n\nif(process.env.environment == 'prod') {\n  config.mysql_db_raw.host = process.env.RDS_hostname;\n  config.mysql_db_raw.password = process.env.RDS_password;\n  config.mysql_db_raw.port = process.env.RDS_port;\n}\n\nconst db_config = Object.assign(DEFAULT_DB_CONF, config.mysql_db_raw);\nconst db_pool = mysql.createPool(db_config);\n\n\n\nfunction commit(connection, done) {\n  queryWithConnection(connection, \"COMMIT\", [], (error) => {\n    try {\n      connection.release();\n    } catch(e) {\n      console.error(\"Release exception: \" + e);\n    }\n    done(error);\n  });\n}\nfunction connectAndQuery(opts, callback) {\n  const sql = opts.sql;\n  const values = opts.values || [];\n\n  queryAndGetConnection({ sql, values}, (error, results, connection) => {\n    try {\n      connection.release();\n    } catch(exception) {\n      console.error(\"Release exception: \" + exception);\n      if(!error) {\n        error = \"Release exception: \" + exception;\n      }\n    }\n    callback(error, results);\n  });\n}\nfunction queryWithConnection(connection, sql, values, callback) {\n  const opts = {\n    sql,\n    timeout: TIMEOUT_MS,\n  };\n  connection.query(opts, values, callback);\n}\nfunction queryAndGetConnection(opts, callback) {\n  const sql = opts.sql;\n  const values = opts.values || [];\n\n  db_pool.getConnection((error, connection) => {\n    if(error) {\n      callback(error);\n    } else {\n      queryWithConnection(connection, sql, values, (error, results) => {\n        callback(error, results, connection);\n      });\n    }\n  });\n}\nfunction rollback(connection, done) {\n  queryWithConnection(connection, \"ROLLBACK\", [], (error) => {\n    try {\n      connection.release();\n    } catch(e) {\n      console.error(\"Release exception: \" + e);\n      if(!error) {\n        error = \"Release exception: \" + exception;\n      }\n    }\n    done(error);\n  });\n}\n\nexports.commit = commit;\nexports.connectAndQuery = connectAndQuery;\nexports.queryAndGetConnection = queryAndGetConnection;\nexports.queryWithConnection = queryWithConnection;\nexports.rollback = rollback;\n"]}